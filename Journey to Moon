/*
***********************
Author : Samarth Gupta*
***********************
*/
#include <algorithm>
#include <bits/stdc++.h>
#include <unordered_map>
#include <unordered_set>
using namespace std;
#define mod (int) 998244353
#define MOD (int) 1e9+7
// Big two primes
#define X 1001100011100001111ll
#define all(a) a.begin(),a.end()
#define for0(i, n) for (int i = 0; i < n; i++)
#define for1(i, n) for (int i = 1; i <= n; i++)
#define loop(i,a,b) for (int i = a; i < b; i++)
#define bloop(i,a,b) for (int i = a ; i>=b;i--)
#define t int t; cin >> t; while (t--)
#define ll long long
#define float long double
#define pb emplace_back
#define fio ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL)
#define rr return 0
#define prec(n) fixed<<setprecision(n)
#define maxpq priority_queue<int>
#define minpq priority_queue<int, vector<int>, greater<int> >
#define inf (int)(1e18)
#define ini(a, i) memset(a, i, sizeof(a))
#define vi vector<int>
#define fi first
#define se second
#define endl "\n"
#define ii pair<int, int>
#define vii vector<ii>
#define sz(s) s.size()
#define bits(n) __builtin_popcount(n)
#define mx *max_element
#define mn *min_element
#define yes cout<<"YES\n"
#define no cout<<"NO\n"
#define ub upper_bound
#define lb lower_bound
#define in(a) for(auto &x : a) cin>>x;
#define pr(a) for(auto x : a) cout<<x<<" "; cout<<"\n";
const int MAXN = (int)((1e5) + 100);
int gcd(int a,int b){   if(b==0)return a;else return gcd(b,a%b);}
int max(int a, int b) {if (a > b) return a; else return b;}
int min(int a, int b) {if (a < b) return a; else return b;}
void prl(int x) {cout << x << endl;}
const int N =  (int)(1 * 1e6 + 10);
using namespace std;
void dfs(ll n,vector<bool>&visited,vector<ll>adj[],ll &cnt,ll i)
{
    visited[i]=true;
    ll sz=adj[i].size();
    for(ll v=0;v<sz;v++)
    {
        ll x=adj[i][v];
        if(!visited[x])
        {
            cnt++;
            dfs(n,visited,adj,cnt,x);
        }
    }
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);cout.tie(NULL);
    ll n,p;
    cin>>n>>p;
    vector<ll>adj[n];
    while(p--)
    {
        ll u,v;
        cin>>u>>v;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    vector<bool>visited(n,false);
    ll ans=0,cnt;
    vector<ll>v,v1;
    for0(i,n)
    {
        if(!visited[i])
        {
            cnt=1;
            dfs(n,visited,adj,cnt,i);
            v.pb(cnt);
        }
    }
    ans=0;
    ll x1=v.size();
    /*
    //isse tle aaega kyuki n^2 m jaaega
    for(int i = 0; i < x1 ; i++)
    {   
         for(int j = i + 1 ; j < x1 ; j++)
         {
              ans += v[i]*v[j];
         }
    }
    cout<<ans<<endl;
    */
     for (int i = 0; i < x1; ++i) {
        ans += v[i] * (n - v[i]);
    }
    prl(ans/2);
    
}
